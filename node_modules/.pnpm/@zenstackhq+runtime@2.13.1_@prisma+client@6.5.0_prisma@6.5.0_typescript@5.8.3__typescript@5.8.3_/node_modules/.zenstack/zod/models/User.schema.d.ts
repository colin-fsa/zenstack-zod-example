import { z } from 'zod';
/**
 * `User` schema excluding foreign keys and relations.
 */
export declare const UserScalarSchema: z.ZodObject<{
    id: z.ZodString;
    zipCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strict", z.ZodTypeAny, {
    id: string;
    zipCode?: string | null | undefined;
}, {
    id: string;
    zipCode?: string | null | undefined;
}>;
/**
 * `User` schema including all fields (scalar, foreign key, and relations) and validations.
 */
export declare const UserSchema: z.ZodObject<{
    id: z.ZodString;
    zipCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strict", z.ZodTypeAny, {
    id: string;
    zipCode?: string | null | undefined;
}, {
    id: string;
    zipCode?: string | null | undefined;
}>;
/**
 * Schema used for validating Prisma create input. For internal use only.
 * @private
 */
export declare const UserPrismaCreateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    zipCode: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    id: z.ZodOptional<z.ZodString>;
    zipCode: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    id: z.ZodOptional<z.ZodString>;
    zipCode: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, z.ZodTypeAny, "passthrough">>;
/**
 * Schema used for validating Prisma update input. For internal use only.
 * @private
 */
export declare const UserPrismaUpdateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    zipCode: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    id: z.ZodOptional<z.ZodString>;
    zipCode: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    id: z.ZodOptional<z.ZodString>;
    zipCode: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, z.ZodTypeAny, "passthrough">>;
/**
 * `User` schema for create operations excluding foreign keys and relations.
 */
export declare const UserCreateScalarSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    zipCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strict", z.ZodTypeAny, {
    id?: string | undefined;
    zipCode?: string | null | undefined;
}, {
    id?: string | undefined;
    zipCode?: string | null | undefined;
}>;
/**
 * `User` schema for create operations including scalar fields, foreign key fields, and validations.
 */
export declare const UserCreateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    zipCode: z.ZodOptional<z.ZodNullable<z.ZodString>>;
}, "strict", z.ZodTypeAny, {
    id?: string | undefined;
    zipCode?: string | null | undefined;
}, {
    id?: string | undefined;
    zipCode?: string | null | undefined;
}>;
/**
 * `User` schema for update operations excluding foreign keys and relations.
 */
export declare const UserUpdateScalarSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    zipCode: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, "strict", z.ZodTypeAny, {
    id?: string | undefined;
    zipCode?: string | null | undefined;
}, {
    id?: string | undefined;
    zipCode?: string | null | undefined;
}>;
/**
 * `User` schema for update operations including scalar fields, foreign key fields, and validations.
 */
export declare const UserUpdateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    zipCode: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodString>>>;
}, "strict", z.ZodTypeAny, {
    id?: string | undefined;
    zipCode?: string | null | undefined;
}, {
    id?: string | undefined;
    zipCode?: string | null | undefined;
}>;
